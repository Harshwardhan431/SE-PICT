;Take Array elements as input and print them all

%macro print 4
        mov rax,%1
        mov rdx,%2
        mov rsi,%3
        mov rdx,%4
        syscall
%endmacro

section .data
        msg1 db "Enter 5 64-bit numbers",10
        len1 equ $-msg1
        newline db 10
        msg4 db '',10
        len4 equ $-msg4
        msg2 db "Entered 64-bit numbers are ",10
        len2 equ $-msg2
        count db 05

section .bss
        array resb 100

section .text
global _start
_start:
        print 01,01,msg1,len1
        mov rbx,array

up: ; print 01,01,newline,01
        mov rax,00
        mov rdi,00
        mov rsi,rbx
        mov rdx,17
        syscall
        add rbx,17
        dec byte[count]
        jnz up
        print 01,01,msg4,len4
        print 01,01,msg2,len2
        mov rbx,array

up1: ; print 01,01,newline,01
        mov rax,01
        mov rdi,01
        mov rsi,rbx
        mov rdx,17
        syscall
        add rbx,17
        dec byte[count]
        jnz up1

mov rax,60
mov rdi,60
syscall